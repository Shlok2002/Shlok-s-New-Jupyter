{
  "hash": "60782a6d546072b6d09e8579d38915c5",
  "result": {
    "markdown": "---\ntitle: \"Mpas in R\"\nauthor: \"Shlok Kamat\"\ndate: \"2023-03-09\"\ncategories: [R, maps]\nimage: \"image.jpg\"\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries\nlibrary(osmdata)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(cowplot)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nlibrary(sysfonts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aes\nshowtext_auto()\ncolors <- c(\"#7b4135\", \"#925b54\", \"#9f403d\", \"#9e4f3d\", \"#af5740\", \"#c07569\", \"#ae9769\", \"#af8f57\", \"#bc9033\", \"#6a7660\",\n            \"#4b5c50\", \"#868d74\", \"#1e1e47\", \"#424569\", \"#2d3e62\", \"#947f8f\", \"#61555b\", \"#7c696e\", \"#936c78\", \"#a58a8c\", \n            \"#c58d9b\")\nfont_add_google(\"Quicksand\")\nfont_add_google(\"Fira Sans\")\nfont1 <- \"Quicksand\"\nfont2 <- \"Fira Sans\"\nfontsize <- 140\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Functions\nCityStreets <- function(cityname, filtername, adminlevel){\n  border <- opq(bbox=cityname) %>%\n    add_osm_feature(key=\"admin_level\", value=adminlevel) %>%\n    osmdata_sf() %>%\n    .$osm_multipolygons %>%\n    select(osm_id, name, geometry) %>%\n    filter(name==filtername)\n  \n  lines <- opq(bbox=cityname) %>%\n    add_osm_feature(key=\"highway\", value=c(\"motorway\", \"truck\", \"primary\", \"secondary\", \"tertiary\", \n                                           \"residential\", \"pedestrian\", \"service\")) %>%\n    osmdata_sf() %>%\n    .$osm_lines %>%\n    select(osm_id, name, geometry)\n  \n  intersection <- st_intersection(lines, border)\n  \n  list <- list(border, intersection)\n  return(list)\n}\n\nplotter <- function(df, color){ \n  plot <- ggplot() +\n    geom_sf(data=df[[2]], size=0.25, color=color) +\n    theme_void() +\n    theme(plot.margin = margin(1, 0, 1.5, 0, \"cm\"))\n  return(plot)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nMumbai <- CityStreets(\"Mumbai, India\", \"Mumbai\", adminlevel=\"8\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n```\n:::\n\n```{.r .cell-code}\nMumbaiP <- plotter(Mumbai, colors[14])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_sf(data=Mumbai[[2]], color=colors[14], size=0.3) +\n  theme_void() +\n  labs(caption=\"Twitter: @BlakeRobMills | Source: OpenStreetMap.org | GitHub: BlakeRMills\") +\n  ggtitle(\"Mumbai\") +\n  theme(plot.title = element_text(color=colors[14], size=160, hjust=0.5, family=font2, face=\"bold\",vjust=0.5),\n        plot.caption = element_text(color=colors[14], size=30, hjust=0.5, family=font2, face=\"bold\", vjust=2),\n        plot.background = element_rect(fill=\"#fdf9f5\", color=\"#fdf9f5\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}